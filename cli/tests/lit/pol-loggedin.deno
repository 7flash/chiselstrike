# SPDX-FileCopyrightText: Â© 2021 ChiselStrike <info@chiselstrike.com>

# RUN: sh -e @file

cp examples/person.ts "$TEMPDIR/models"
mkdir -p "$TEMPDIR/endpoints/a/b/c"
cp examples/find.js "$TEMPDIR/endpoints"
cp examples/find.js "$TEMPDIR/endpoints/a/b/c/findc1.js"
cp examples/find.js "$TEMPDIR/endpoints/a/b/c/findc2.js"
cat << EOF > "$TEMPDIR/policies/pol.yaml"
endpoints:
  - path: /find
    users: .*
  - path: /a/b/c/findc1
    users: ^al$
  - path: /a/b
    users: ^a
EOF

cd "$TEMPDIR"
$CHISEL apply

id_al=`$CURL -d '{"name":"Al", "email":"al"}' $CHISELD_HOST/__chiselstrike/auth/users|sed -ne 's/.*"id": "\(.*\)".$/\1/p'`
id_als=`$CURL -d '{"name":"Als", "email":"als"}' $CHISELD_HOST/__chiselstrike/auth/users|sed -ne 's/.*"id": "\(.*\)".$/\1/p'`

$CURL $CHISELD_HOST/find
# CHECK: HTTP/1.1 404 Not Found

$CURL $CHISELD_HOST/dev/find
# CHECK: HTTP/1.1 403 Forbidden
$CHISEL restart

$CURL $CHISELD_HOST/dev/find
# CHECK: HTTP/1.1 403 Forbidden

$CURL -H ChiselUID\:$id_al $CHISELD_HOST/dev/find # Carefully constructs a valid request without triggering lit command parsing.
# CHECK: HTTP/1.1 200 OK
$CURL -H ChiselUID\:invalid_id $CHISELD_HOST/dev/find
# CHECK: HTTP/1.1 403 Forbidden

$CURL $CHISELD_HOST/dev/a/b/c/findc1
# CHECK: HTTP/1.1 403 Forbidden
$CURL -H ChiselUID\:invalid_id $CHISELD_HOST/dev/a/b/c/findc1
# CHECK: HTTP/1.1 403 Forbidden
$CURL -H ChiselUID\:$id_al $CHISELD_HOST/dev/a/b/c/findc1
# CHECK: HTTP/1.1 200 OK
$CURL -H ChiselUID\:$id_als $CHISELD_HOST/dev/a/b/c/findc1
# CHECK: HTTP/1.1 403 Forbidden

$CURL $CHISELD_HOST/dev/a/b/c/findc2
# CHECK: HTTP/1.1 403 Forbidden
$CURL -H ChiselUID\:invalid_id $CHISELD_HOST/dev/a/b/c/findc2
# CHECK: HTTP/1.1 403 Forbidden
$CURL -H ChiselUID\:$id_al $CHISELD_HOST/dev/a/b/c/findc2
# CHECK: HTTP/1.1 200 OK
$CURL -H ChiselUID\:$id_als $CHISELD_HOST/dev/a/b/c/findc2
# CHECK: HTTP/1.1 200 OK

cat << EOF > "$TEMPDIR/policies/pol.yaml"
endpoints:
  - path: /find
    users: .*
  - path: /find
    users: ^als$
EOF
$CHISEL apply 2>&1 || echo # (swallow the apply abort)
# CHECK: Error: Repeated path in user authorization: "/find"
rm "$TEMPDIR/policies/pol.yaml"
